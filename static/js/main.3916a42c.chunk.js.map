{"version":3,"sources":["components/CitySelect.js","hooks/UseDateString.js","components/Header.js","components/Loader.js","hooks/UseCelsius.js","components/WeatherCard.js","components/WeatherCardList.js","config/apis.js","hooks/UseFetch.js","App.js","index.js"],"names":["CitySelect","onChangeCity","useState","changeCity","setChangeCity","className","onSubmit","e","preventDefault","type","placeholder","onChange","target","value","defaultOptions","weekday","year","month","day","hour","minute","UseDateString","date","options","language","window","navigator","userLanguage","dateString","Intl","DateTimeFormat","format","Header","Date","today","setToday","useEffect","updateTime","setInterval","clearInterval","Loader","UseCelsius","kenvil","toFixed","WeatherCard","time","icon","wind","humidity","temp","src","alt","WeatherCardList","list","prevDate","isChangeDate","map","card","dt_txt","split","weatherDate","weatherTime","Fragment","weather","speed","main","dt","renderCards","GETIP_LINK","WEATHER_API_KEY","reducer","state","action","response","undefined","isLoading","error","payload","UseFetch","url","config","initialState","useReducer","dispatch","a","axios","res","console","log","fetchData","App","city","setCity","ready","setReady","data","fetchCity","currentWeather","currentError","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3916a42c.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { BsSearch as SearchIcon } from \"react-icons/bs\"\r\n\r\nfunction CitySelect({ onChangeCity }) {\r\n    const [changeCity, setChangeCity] = useState(null)\r\n    const handleCitySubmit = (e) => {\r\n        e.preventDefault();\r\n        onChangeCity(changeCity);\r\n    }\r\n\r\n    return (\r\n        <form \r\n        className=\"search\"\r\n        onSubmit={handleCitySubmit}\r\n        >\r\n            <input \r\n            type=\"text\" \r\n            placeholder=\"Search\"\r\n            onChange={(e) => setChangeCity(e.target.value)}\r\n            />\r\n            <SearchIcon className=\"icon\"/>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default CitySelect\r\n","const defaultOptions = { \r\n    weekday: 'long', year: 'numeric', month: 'long', day: 'numeric',\r\n    hour: 'numeric', minute: 'numeric',\r\n}\r\n\r\nconst UseDateString = (date, options = defaultOptions) => {\r\n    let language = window.navigator.userLanguage || window.navigator.language\r\n    const dateString = new Intl.DateTimeFormat(language, options).format(date)\r\n    return dateString\r\n}\r\n\r\nexport default UseDateString\r\n","import React, { useState, useEffect } from 'react'\r\nimport CitySelect from './CitySelect'\r\nimport UseDateString from '../hooks/UseDateString'\r\nfunction Header({ onChangeCity }) {\r\n    const [today, setToday] = useState(new Date())\r\n\r\n    useEffect(() => {\r\n        const updateTime = setInterval(() => {\r\n            setToday(new Date())\r\n        }, 1000 * 60)\r\n\r\n        return (() => clearInterval(updateTime))\r\n    }, [today])\r\n    \r\n    return (\r\n        <header>\r\n            <div className=\"header-left\">\r\n                <div className=\"logo\">Weather Forecast</div>\r\n                <div className=\"date\">{UseDateString(today)}</div>\r\n            </div>\r\n            <CitySelect\r\n            onChangeCity={onChangeCity}\r\n            />\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport \"./Loader.css\"\r\n\r\nfunction Loader() {\r\n    return (\r\n        <div className=\"loader\">\r\n            <div className=\"spinner\"><span></span></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","const UseCelsius = (kenvil) => {\r\n    return (kenvil - 272.15).toFixed(1)\r\n}\r\n\r\nexport default UseCelsius\r\n","import React from 'react'\r\nimport { BiDroplet as HumidityIcon } from \"react-icons/bi\";\r\nimport { BiWind as WindIcon } from \"react-icons/bi\";\r\nimport { BsClock as ClockIcon } from \"react-icons/bs\";\r\nimport UseCelsius from \"../hooks/UseCelsius\";\r\n\r\nfunction WeatherCard({ time, icon, wind, humidity, temp }) {\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card-title\">\r\n                <ClockIcon /> {time}\r\n            </div>\r\n            <div className=\"card-weather-icon\">\r\n                <img className=\"icon\" src={`http://openweathermap.org/img/wn/${icon}@2x.png`} alt=\"rain\"></img>\r\n            </div>\r\n            <div className=\"card-info\">\r\n                <div className=\"wind\">\r\n                    <WindIcon className=\"icon\"/>\r\n                    <span>{wind.toFixed(2)} m/s</span>\r\n                </div>\r\n                <div className=\"humidity\">\r\n                    <HumidityIcon className=\"icon\"/>\r\n                    <span>{humidity}%</span>\r\n                </div>\r\n            </div>\r\n            <div className=\"card-degree\">{UseCelsius(temp)}&#176;</div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeatherCard\r\n","import React from 'react'\r\nimport WeatherCard from './WeatherCard'\r\nimport { BsCalendar2Check as CalendarIcon } from \"react-icons/bs\";\r\n\r\nimport UseDateString from '../hooks/UseDateString';\r\n\r\nfunction WeatherCardList({ list }) {\r\n    const renderCards = () => {\r\n        let prevDate\r\n        let isChangeDate = true\r\n\r\n        return list.map(card => {\r\n            const [weatherDate, weatherTime] = card.dt_txt.split(\" \")\r\n\r\n            if(weatherDate === prevDate) {\r\n                isChangeDate = false\r\n                \r\n            } else {\r\n                isChangeDate = true\r\n                prevDate = weatherDate\r\n            }\r\n\r\n            return (\r\n                <React.Fragment key={card.dt}>\r\n                    {isChangeDate ? \r\n                        <h3 className=\"card-date\">\r\n                            <CalendarIcon/> \r\n                            {UseDateString(new Date(weatherDate), {weekday: 'long'})}, {weatherDate}\r\n                        </h3> : null\r\n                    }\r\n                    <WeatherCard\r\n                        time={weatherTime}\r\n                        icon={card.weather[0].icon}\r\n                        wind={card.wind.speed}\r\n                        humidity={card.main.humidity}\r\n                        temp={card.main.temp}\r\n                    />\r\n                </React.Fragment>\r\n            )\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"card-list\">\r\n                {renderCards()}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default WeatherCardList\r\n","export const GETIP_LINK = `http://api.ipstack.com/check?access_key=e4b9442b71904780687608c088df7aa3`\r\nexport const WEATHER_API_URL = \"http://api.openweathermap.org/data/2.5/forecast?q=\"\r\nexport const WEATHER_CURRENT_API_URL = \"http://api.openweathermap.org/data/2.5/weather?q=\"\r\nexport const WEATHER_API_KEY = \"&appid=a0ded0e78843e07315d41e6394b36453\"","import axios from \"axios\"\r\nimport { useReducer, useEffect } from 'react'\r\n\r\nconst reducer = (state, action) => {\r\n    switch(action.type) {\r\n        case \"loading\": \r\n            return { response: undefined, isLoading: true, error: undefined }\r\n        case \"success\": \r\n            return { response: action.payload, isLoading: false, error: undefined }\r\n        case \"error\": \r\n            return { response: undefined, isLoading: false, error: action.payload }\r\n        default:\r\n            return { response: undefined, isLoading: false, error: \"Invalid action\" }\r\n    }\r\n}\r\n\r\nconst UseFetch = (url, config) => {\r\n    const initialState = {\r\n        response: undefined,\r\n        isLoading: false,\r\n        error: undefined\r\n    }\r\n\r\n    const [state, dispatch] = useReducer(reducer, initialState)\r\n\r\n    useEffect(() => {\r\n        dispatch({type: \"loading\"})\r\n        console.log(url);\r\n        async function fetchData() {\r\n            try {\r\n                const res = await axios(url, config)\r\n                dispatch({type: \"success\", payload: res})\r\n            } catch(error) {\r\n                dispatch({type: \"error\", payload: \"Sorry we couldn't find your city. Please confirm and try again.\"})\r\n            } \r\n        }\r\n        \r\n        fetchData();\r\n    }, [url, config])\r\n\r\n    return state;\r\n}\r\n\r\nexport default UseFetch\r\n","import axios from \"axios\"\nimport { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport Loader from \"./components/Loader\";\nimport WeatherCardList from './components/WeatherCardList';\nimport { GETIP_LINK, WEATHER_API_URL, WEATHER_CURRENT_API_URL, WEATHER_API_KEY } from './config/apis';\nimport UseCelsius from \"./hooks/UseCelsius\";\nimport UseFetch from './hooks/UseFetch';\n\nfunction App() {\n  // Initialize city\n  const [city, setCity] = useState(null)\n  const [ready, setReady] = useState(false)\n\n  // Get user current city \n  useEffect(() => {\n    async function fetchCity() {\n      try {\n        const res = await axios(GETIP_LINK);\n        setCity(res.data.city)\n        setReady(true)\n      } catch(error) {\n        console.log(error);\n      } \n    }\n\n    fetchCity()\n  }, [])\n  \n  // Weather List \n  const {response, isLoading, error} = UseFetch(`${WEATHER_API_URL}${city}${WEATHER_API_KEY}`);\n  // Current Weather\n  const {response: currentWeather, isLoading: isCurrentLoading, error: currentError} = UseFetch(`${WEATHER_CURRENT_API_URL}${city}${WEATHER_API_KEY}`);\n\n  const renderCurrentWeather = () => {\n    if(currentError && ready) return null\n    if(currentWeather) return (\n      <div className=\"banner\">\n        <h2>{city}</h2>\n        <span className=\"degree\">{UseCelsius(currentWeather.data.main.temp)}&#176;</span>\n      </div>\n    )\n  }\n\n  const renderCardList = () => {\n    if(error && ready) return <p className=\"error\">{error}</p>\n    if(isLoading && !response && ready) return <Loader />\n    if(response) {\n      console.log(response.data);\n      return (\n        <main>\n          <WeatherCardList\n          list={response.data.list}\n          />\n        </main>\n      )\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <Header\n      onChangeCity={setCity}\n      />\n      {renderCurrentWeather()}\n      {renderCardList()}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}